#summary Working with git branches

= Введение =

Ветвление позволяет отклоняться от основной линии разработки и продолжать работу, не вмешиваясь в основную линию. В последствии возможно слияния веток в одну. Что происходит при создании веток, работе с ними и их слиянии можно подробно прочитать по [http://git-scm.com/book/ru/%D0%92%D0%B5%D1%82%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-Git ссылке]

= Работа с ветвями используя Git Bash =
==Создание новой ветки==
Для создания новой ветки используется команда
{{{
git branch new_branch
}}}
где new_branch это название создаваемой ветки. 

<font color=red> *ВНИМАНИЕ*! </font> Создавать новую ветку не надо! Для вас уже создана ветка students-develop.

==Переключение на другую ветку==

Для того чтоб переключиться на другую ветвь, например students-develop используется команда
{{{
git checkout students-develop
}}}
[http://wiki.mipt-ilab-course.googlecode.com/git/git_checkout.png]

В скобках будет показано название ветки. Теперь в данной папке будут находиться файлы ветки students-develop.

==Удаление ветки==

Для того чтоб удалить Ветку используется команда

{{{
git branch -d new_branch
}}}

=Работа с ветвями используя Git Extensions=
==Создание новой ветки==
Для создания ветки через Git Extensions используется контекстное меню

[http://wiki.mipt-ilab-course.googlecode.com/git/contex.png]

Далее выбираем команду _Create branch_. Вводим в поле "Имя ветви" имя ветви и нажимаем кнопку создать ветвь.

[http://wiki.mipt-ilab-course.googlecode.com/git/Create_Branch.png]

Ветвь будет создана.

==Переключение на другую ветку==

Всё в том же контекстном меню выбирается пункт _Checkout branch_. Появляется окно

[http://wiki.mipt-ilab-course.googlecode.com/git/Checkout_Branch.png]

В выпадающем списке выбираете нужную ветвь и нажимаете забрать. Пункт локальные изменения влияет на разрешение конфликтов файлов с одинаковым именем.

==Удаление ветки==

Чтобы удалить ветвь, надо запустить Git Extensions и в выпадающем меню _Команды_ выбрать пункт удалить ветвь