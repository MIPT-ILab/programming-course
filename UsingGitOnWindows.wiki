#summary Step-by-step introduction for using git from Windows hosts
#labels HowTo,GettingStarted

<wiki:comment>
TODO: move pictures to the right sode of the page
</wiki:comment>

= Введение =

Для обращения к репозиторию необходимо настроить рабочую среду Git, позволяющую получать хранящиеся на сервере и публиковать свои локальные изменения. Ниже дана пошаговая инструкция для ОС Windows и консольной версии инструментов Git в связке с хостингом Google Code. Отметим, что для работы могут использованы и любые другие инструменты.

= Получение и установка Git =

 * Откройте ссылку http://git-scm.com/downloads и скачайте инсталлятор. Имя его должно быть похоже на `git-1.8.4-preview.exe`.

[http://wiki.mipt-ilab-course.googlecode.com/git/git-download.png]

 * Установите набор приложений. Используйте настройки по умолчанию, если вы не знаете, что означают вопросы, задаваемые при инсталляции.

[http://wiki.mipt-ilab-course.googlecode.com/git/git-install.png]

= Настройка доступа к репозиторию =

 * Получите права на запись в репозиторий проекта: http://code.google.com/p/mipt-ilab-course . При этом ваше имя должно появиться с списке участников с пометкой *Committer* или *Contributor*

 * Узнайте свой пароль к репозиториям. Google Code использует генерируемые пароли, они доступны с вашей страницы настроек. Он понадобится вам на следующем шаге.

[http://wiki.mipt-ilab-course.googlecode.com/git/git-google-code-pass.png]

= Получение копии репозитория - клонирование = 

Краткая инструкция по получению репозитория приведена на вкладке *Source - Checkout*

[http://wiki.mipt-ilab-course.googlecode.com/git/git-checkout-howto.png]

Однако разберём её подробнее.

 * Найдите среди недавно установленных программ новую категорию Git. Откройте командную строку Git Bash. Эта командная строка представляет собой окружение, во многом аналогичное Linux версиям Bash.

[http://wiki.mipt-ilab-course.googlecode.com/git/git-bash.png]
 
 * Создайте файл `_netrc` (первый символ - подчерк) и сохраните в нём свой пароль к репозиторию для того, чтобы не вводить его каждый раз при операции `push`, выполнив в коммандной строке следующие команды:
{{{
echo machine code.google.com login ваш@емейл password пароль >> _netrc
chown 600 _netrc
}}}

*Примечание* на Unix-системах данный файл должен иметь имя `.netrc`, начинающееся с точки. Далее мы будем использовать оба имени взаимозаменяемо.

 * Не забудьте подставить свой емейл адрес в качестве логина и свой пароль Google Code в качестве пароля!

[http://wiki.mipt-ilab-course.googlecode.com/git/git-netrc.png]

 * Наконец, для получения копии репозитория (_клонирования_ удалённого репозитория) выполните команду 
{{{
git clone https://code.google.com/p/mipt-ilab-course/
}}}
 * Не указывайте своё имя/емейл в командной строке! Это создаст некоторые проблемы с настройками в `.netrc`

[http://wiki.mipt-ilab-course.googlecode.com/git/git-clone.png]

= Внесение изменений = 

 * После окончания клонирования у вас должна появиться новая директория `mipt-ilab-course`, содержащая все файлы проекта. Вы можете вносить в ней произвольные изменения: добавлять файлы и директории, редактировать существующие файлы. Единственное исключение - директория `.git`. Настоятельно не рекомендуется модифицировать, удалять или переименовывать файлы в ней.

[http://wiki.mipt-ilab-course.googlecode.com/git/git-folder.png]

 * Для того, чтобы при будущих коммитах было указано ваше имя и емейл, выполните следующие команды:
{{{
git config --global user.email "ваш@емейл"
git config --global user.name "ваше имя"
}}}

== Публикация изменений ==
 * Процесс публикации изменений при работе с Git двустадийный

 # Вы фиксируете изменения в своей локальной копии репозитория (находящейся в папке `.git`) - это *commit*
 # Вы переносите локальные изменения в удалённый репозиторий - это *push*

 * В Git Bash зайдите в директорию проекта: `cd mipt-ilab-course`. Вы должны находиться внутри файловой структуры проекта почти всегда, когда выполняете какие-то команды git, чтобы программа знала, с каким именно репозиторием вы работаете.

 * Для коммита выполните команду
{{{
git commit -a -m 'Change description'
}}}

Здесь опция `-a` приказывает занести все локальные изменения в репозиторий, `-m 'строка'` указывает комментарий, описывающий изменения, который будет виден всем участникам после успешного пуша. Всегда давайте в комментарии полезное описание ваших действий!

[http://wiki.mipt-ilab-course.googlecode.com/git/git-commit.png]

 * Для пуша выполните команду

[http://wiki.mipt-ilab-course.googlecode.com/git/git-push.png]

 * Для проверки, что ваши изменения достигли репозитория, проверьте, что новая версия появилась в веб-интерфейсе проекта: http://code.google.com/p/mipt-ilab-course/source/list. В примере ниже мой коммит получил краткий номер 7789a9e77f32:

[http://wiki.mipt-ilab-course.googlecode.com/git/git-webhistory.png]

Заметьте, что вместе с коммитом видно имя автора и описание изменения.

 * Поздравляю! Вы выполнили свой первый коммит в проекте!


= Статьи, требующие написания =

Дальнейшее чтение по работе с Git
 * GitRevisions
 * GitAddDelete
 * GitEmergencyRestore - что делать, если запороли репозиторий